<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rbac.system.mapper.SysConfigMapper">
  <resultMap id="BaseResultMap" type="com.rbac.system.domain.SysConfig">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="config_name" jdbcType="VARCHAR" property="configName" />
    <result column="config_key" jdbcType="VARCHAR" property="configKey" />
    <result column="config_value" jdbcType="VARCHAR" property="configValue" />
    <result column="config_value_type" jdbcType="VARCHAR" property="configValueType" />
    <result column="system_built" jdbcType="TINYINT" property="systemBuilt" />
    <result column="form_type" jdbcType="VARCHAR" property="formType" />
    <result column="optional_values" jdbcType="VARCHAR" property="optionalValues" />
    <result column="visible" jdbcType="TINYINT" property="visible" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="default_value" jdbcType="VARCHAR" property="defaultValue" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, config_name, config_key, config_value, config_value_type, system_built, form_type, 
    optional_values, visible, sort, default_value, create_by, create_time, update_by, 
    update_time, note
  </sql>
  <select id="selectByExample" parameterType="com.rbac.system.domain.SysConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_configuration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_configuration
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_configuration
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rbac.system.domain.SysConfigExample">
    delete from sys_configuration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.rbac.system.domain.SysConfig" useGeneratedKeys="true">
    insert into sys_configuration (config_name, config_key, config_value, 
      config_value_type, system_built, form_type, 
      optional_values, visible, sort, 
      default_value, create_by, create_time, 
      update_by, update_time, note
      )
    values (#{configName,jdbcType=VARCHAR}, #{configKey,jdbcType=VARCHAR}, #{configValue,jdbcType=VARCHAR}, 
      #{configValueType,jdbcType=VARCHAR}, #{systemBuilt,jdbcType=TINYINT}, #{formType,jdbcType=VARCHAR}, 
      #{optionalValues,jdbcType=VARCHAR}, #{visible,jdbcType=TINYINT}, #{sort,jdbcType=INTEGER}, 
      #{defaultValue,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{note,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.rbac.system.domain.SysConfig" useGeneratedKeys="true">
    insert into sys_configuration
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="configName != null">
        config_name,
      </if>
      <if test="configKey != null">
        config_key,
      </if>
      <if test="configValue != null">
        config_value,
      </if>
      <if test="configValueType != null">
        config_value_type,
      </if>
      <if test="systemBuilt != null">
        system_built,
      </if>
      <if test="formType != null">
        form_type,
      </if>
      <if test="optionalValues != null">
        optional_values,
      </if>
      <if test="visible != null">
        visible,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="defaultValue != null">
        default_value,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="configName != null">
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configKey != null">
        #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null">
        #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="configValueType != null">
        #{configValueType,jdbcType=VARCHAR},
      </if>
      <if test="systemBuilt != null">
        #{systemBuilt,jdbcType=TINYINT},
      </if>
      <if test="formType != null">
        #{formType,jdbcType=VARCHAR},
      </if>
      <if test="optionalValues != null">
        #{optionalValues,jdbcType=VARCHAR},
      </if>
      <if test="visible != null">
        #{visible,jdbcType=TINYINT},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="defaultValue != null">
        #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_configuration
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.configName != null">
        config_name = #{record.configName,jdbcType=VARCHAR},
      </if>
      <if test="record.configKey != null">
        config_key = #{record.configKey,jdbcType=VARCHAR},
      </if>
      <if test="record.configValue != null">
        config_value = #{record.configValue,jdbcType=VARCHAR},
      </if>
      <if test="record.configValueType != null">
        config_value_type = #{record.configValueType,jdbcType=VARCHAR},
      </if>
      <if test="record.systemBuilt != null">
        system_built = #{record.systemBuilt,jdbcType=TINYINT},
      </if>
      <if test="record.formType != null">
        form_type = #{record.formType,jdbcType=VARCHAR},
      </if>
      <if test="record.optionalValues != null">
        optional_values = #{record.optionalValues,jdbcType=VARCHAR},
      </if>
      <if test="record.visible != null">
        visible = #{record.visible,jdbcType=TINYINT},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.defaultValue != null">
        default_value = #{record.defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_configuration
    set id = #{record.id,jdbcType=BIGINT},
      config_name = #{record.configName,jdbcType=VARCHAR},
      config_key = #{record.configKey,jdbcType=VARCHAR},
      config_value = #{record.configValue,jdbcType=VARCHAR},
      config_value_type = #{record.configValueType,jdbcType=VARCHAR},
      system_built = #{record.systemBuilt,jdbcType=TINYINT},
      form_type = #{record.formType,jdbcType=VARCHAR},
      optional_values = #{record.optionalValues,jdbcType=VARCHAR},
      visible = #{record.visible,jdbcType=TINYINT},
      sort = #{record.sort,jdbcType=INTEGER},
      default_value = #{record.defaultValue,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rbac.system.domain.SysConfig">
    update sys_configuration
    <set>
      <if test="configName != null">
        config_name = #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configKey != null">
        config_key = #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null">
        config_value = #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="configValueType != null">
        config_value_type = #{configValueType,jdbcType=VARCHAR},
      </if>
      <if test="systemBuilt != null">
        system_built = #{systemBuilt,jdbcType=TINYINT},
      </if>
      <if test="formType != null">
        form_type = #{formType,jdbcType=VARCHAR},
      </if>
      <if test="optionalValues != null">
        optional_values = #{optionalValues,jdbcType=VARCHAR},
      </if>
      <if test="visible != null">
        visible = #{visible,jdbcType=TINYINT},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="defaultValue != null">
        default_value = #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rbac.system.domain.SysConfig">
    update sys_configuration
    set config_name = #{configName,jdbcType=VARCHAR},
      config_key = #{configKey,jdbcType=VARCHAR},
      config_value = #{configValue,jdbcType=VARCHAR},
      config_value_type = #{configValueType,jdbcType=VARCHAR},
      system_built = #{systemBuilt,jdbcType=TINYINT},
      form_type = #{formType,jdbcType=VARCHAR},
      optional_values = #{optionalValues,jdbcType=VARCHAR},
      visible = #{visible,jdbcType=TINYINT},
      sort = #{sort,jdbcType=INTEGER},
      default_value = #{defaultValue,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>